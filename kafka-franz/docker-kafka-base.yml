services:
  # base
  kafka-base:
    image: apache/kafka:3.9.1
    networks:
      - kafka-network

  # controller
  kafka-controller:
    extends: kafka-base
    environment:
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  # broker
  kafka-broker:
    extends: kafka-base
    environment:
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck: # This tool retrieves the API versions supported by the broker. A successful response signifies that the broker is responding to requests.
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:19092"]
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3

  # basic commands
  kafka-commands:
    extends: kafka-base
    depends_on:
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      kafka-broker-3:
        condition: service_healthy
    restart: on-failure:10

  # extra commands:
  kafka-commands-utility:
    extends: kafka-commands
    profile: ["utility"]

# Network
networks:
  kafka-network:
    driver: bridge
